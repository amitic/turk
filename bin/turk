#!/usr/bin/env node
var turk = require('..');

var yargs = require('yargs')
  .usage('Usage: turk <options>')
  .example('turk Operation=SearchQualificationTypes', 'query the available search qualification types')
  .example('turk Operation=SendTestEventNotification Notification.1.Destination=https://sqs.us-east-1.amazonaws.com/185747841350/turk_all Notification.1.Transport=SQS Notification.1.Version=2006-05-05 Notification.1.EventType=HITReviewable', 'query the available search qualification types')
  .example('turk Operation=GetAccountBalance', 'get your account balance')
  .options({
    accessKeyId: {
      describe: 'AWS Access Key',
      default: process.env.AWS_ACCESS_KEY_ID,
    },
    secretAccessKey: {
      describe: 'AWS Secret Key',
      default: process.env.AWS_SECRET_ACCESS_KEY,
    },
    production: {
      describe: 'Use the production environment (default: sandbox)',
      boolean: true,
      alias: 'p',
    },
    help: {
      describe: 'print this help message',
      boolean: true,
      alias: 'h',
    },
    verbose: {
      describe: 'print extra output',
      boolean: true,
    },
    version: {
      describe: 'print version',
      boolean: true,
    },
  });

var argv = yargs.argv;

if (argv.version) {
  console.log(require('../package').version);
}
else if (argv.help) {
  return yargs.showHelp();
}
else {
  var params = turk.splitStrings(argv._);
  var environment = argv.production ? turk.Environment.production : turk.Environment.sandbox;
  var account = new turk.Account(argv.accessKeyId, argv.secretAccessKey);
  var connection = account.createConnection(environment);
  connection.post(params, function(err, xml) {
    if (err) return console.error(err);

    console.log(xml);
  });
}
